unit altera_data_venda;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, DBCtrls, StdCtrls, Buttons, Collection, TFlatPanelUnit,
  Menus, DB, ZAbstractRODataset, ZAbstractDataset, ZDataset, Grids, DBGrids,
  AdvGlowButton, Wwdbigrd, Wwdbgrid, UCBase, AdvMetroButton, AdvSmoothPanel,
  AdvSmoothExpanderPanel;

type
  Tfrmaltera_data_venda = class(TForm)
    Pop1: TPopupMenu;
    Excluir1: TMenuItem;
    Fechar1: TMenuItem;
    dsaltera_data_venda: TDataSource;
    qraltera_data_venda: TZQuery;
    Panel2: TPanel;
    bexcluir: TAdvGlowButton;
    bfechar: TAdvGlowButton;
    pgravar: TFlatPanel;
    bgravar: TAdvGlowButton;
    bcancelar: TAdvGlowButton;
    Bevel1: TBevel;
    wwDBGrid1: TwwDBGrid;
    UCControls1: TUCControls;
    AdvSmoothExpanderPanel1: TAdvSmoothExpanderPanel;
    Label53: TLabel;
    AdvMetroButton1: TAdvMetroButton;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormShow(Sender: TObject);
    procedure bexcluirClick(Sender: TObject);
    procedure bfecharClick(Sender: TObject);
    procedure enomeKeyPress(Sender: TObject; var Key: Char);
    procedure qraltera_data_vendaBeforePost(DataSet: TDataSet);
    procedure qraltera_data_vendaAfterPost(DataSet: TDataSet);
    procedure AdvMetroButton1Click(Sender: TObject);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmaltera_data_venda: Tfrmaltera_data_venda;
  comando: string;

implementation

uses modulo, principal;

{$R *.dfm}

procedure Tfrmaltera_data_venda.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  Action := cafree;
end;

procedure Tfrmaltera_data_venda.FormShow(Sender: TObject);
begin
  qraltera_data_venda.close;
  qraltera_data_venda.SQL.clear;
  qraltera_data_venda.SQL.add('select * from c000052 order by codigo');
  qraltera_data_venda.open;
  qraltera_data_venda.first;
end;

procedure Tfrmaltera_data_venda.AdvMetroButton1Click(Sender: TObject);
begin
  close;
end;

procedure Tfrmaltera_data_venda.bexcluirClick(Sender: TObject);
begin
  if frmprincipal.autentica('Excluir altera_data_venda', 4) then
  begin
    frmprincipal.logUC('Excluiu altera_data_venda - '+ qraltera_data_venda.FieldByName('altera_data_venda').AsString, 3);
    qraltera_data_venda.delete;
    frmmodulo.conexao.commit;

  end
  else
  begin
    Application.messagebox('Acesso não permitido!', 'Erro!',
      mb_ok + mb_iconerror);
  end;
end;

procedure Tfrmaltera_data_venda.bfecharClick(Sender: TObject);
begin
  close;
end;

procedure Tfrmaltera_data_venda.enomeKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then
    bgravar.SETFOCUS;
end;

procedure Tfrmaltera_data_venda.qraltera_data_vendaBeforePost(DataSet: TDataSet);
begin

  if trim(qraltera_data_venda.fieldbyname('altera_data_venda').asstring) = '' then
  begin
    Application.messagebox('altera_data_venda Não Pode Ficar em Branco, Verifique!',
      'Atenção!', mb_ok + MB_ICONEXCLAMATION);
    qraltera_data_venda.cancel;
    qraltera_data_venda.Prior;
    exit;
  end;

  qraltera_data_venda.fieldbyname('altera_data_venda').asstring :=
    ansiuppercase(qraltera_data_venda.fieldbyname('altera_data_venda').asstring);

  if qraltera_data_venda.State = dsinsert then
    qraltera_data_venda.fieldbyname('codigo').asstring := frmprincipal.codifica('000052')

end;

procedure Tfrmaltera_data_venda.qraltera_data_vendaAfterPost(DataSet: TDataSet);
begin
  frmmodulo.conexao.commit;
end;

end.
